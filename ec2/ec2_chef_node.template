{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Conditions": {
        "IsCentos7": {
            "Fn::Equals": [
                {
                    "Ref": "LinuxType"
                },
                "centos_7"
            ]
        }
    },
    "Description": "Create a fully bootstrapped Chef node.",
    "Mappings": {
        "AWSInstanceType2Arch": {
            "c1.medium": {
                "Arch": "PV64"
            },
            "c1.xlarge": {
                "Arch": "PV64"
            },
            "c3.2xlarge": {
                "Arch": "HVM64"
            },
            "c3.4xlarge": {
                "Arch": "HVM64"
            },
            "c3.8xlarge": {
                "Arch": "HVM64"
            },
            "c3.large": {
                "Arch": "HVM64"
            },
            "c3.xlarge": {
                "Arch": "HVM64"
            },
            "c4.2xlarge": {
                "Arch": "HVM64"
            },
            "c4.4xlarge": {
                "Arch": "HVM64"
            },
            "c4.8xlarge": {
                "Arch": "HVM64"
            },
            "c4.large": {
                "Arch": "HVM64"
            },
            "c4.xlarge": {
                "Arch": "HVM64"
            },
            "cc2.8xlarge": {
                "Arch": "HVM64"
            },
            "cr1.8xlarge": {
                "Arch": "HVM64"
            },
            "d2.2xlarge": {
                "Arch": "HVM64"
            },
            "d2.4xlarge": {
                "Arch": "HVM64"
            },
            "d2.8xlarge": {
                "Arch": "HVM64"
            },
            "d2.xlarge": {
                "Arch": "HVM64"
            },
            "g2.2xlarge": {
                "Arch": "HVMG2"
            },
            "g2.8xlarge": {
                "Arch": "HVMG2"
            },
            "hi1.4xlarge": {
                "Arch": "HVM64"
            },
            "hs1.8xlarge": {
                "Arch": "HVM64"
            },
            "i2.2xlarge": {
                "Arch": "HVM64"
            },
            "i2.4xlarge": {
                "Arch": "HVM64"
            },
            "i2.8xlarge": {
                "Arch": "HVM64"
            },
            "i2.xlarge": {
                "Arch": "HVM64"
            },
            "m1.large": {
                "Arch": "PV64"
            },
            "m1.medium": {
                "Arch": "PV64"
            },
            "m1.small": {
                "Arch": "PV64"
            },
            "m1.xlarge": {
                "Arch": "PV64"
            },
            "m2.2xlarge": {
                "Arch": "PV64"
            },
            "m2.4xlarge": {
                "Arch": "PV64"
            },
            "m2.xlarge": {
                "Arch": "PV64"
            },
            "m3.2xlarge": {
                "Arch": "HVM64"
            },
            "m3.large": {
                "Arch": "HVM64"
            },
            "m3.medium": {
                "Arch": "HVM64"
            },
            "m3.xlarge": {
                "Arch": "HVM64"
            },
            "m4.10xlarge": {
                "Arch": "HVM64"
            },
            "m4.2xlarge": {
                "Arch": "HVM64"
            },
            "m4.4xlarge": {
                "Arch": "HVM64"
            },
            "m4.large": {
                "Arch": "HVM64"
            },
            "m4.xlarge": {
                "Arch": "HVM64"
            },
            "r3.2xlarge": {
                "Arch": "HVM64"
            },
            "r3.4xlarge": {
                "Arch": "HVM64"
            },
            "r3.8xlarge": {
                "Arch": "HVM64"
            },
            "r3.large": {
                "Arch": "HVM64"
            },
            "r3.xlarge": {
                "Arch": "HVM64"
            },
            "t1.micro": {
                "Arch": "PV64"
            },
            "t2.large": {
                "Arch": "HVM64"
            },
            "t2.medium": {
                "Arch": "HVM64"
            },
            "t2.micro": {
                "Arch": "HVM64"
            },
            "t2.nano": {
                "Arch": "HVM64"
            },
            "t2.small": {
                "Arch": "HVM64"
            }
        },
        "AWSRegionArch2AmazonLinuxAMI": {
            "ap-northeast-1": {
                "HVM64": "ami-374db956",
                "HVMG2": "ami-e0ee1981",
                "PV64": "ami-3e42b65f"
            },
            "ap-northeast-2": {
                "HVM64": "ami-2b408b45",
                "HVMG2": "NOT_SUPPORTED",
                "PV64": "NOT_SUPPORTED"
            },
            "ap-south-1": {
                "HVM64": "ami-ffbdd790",
                "HVMG2": "ami-f5b2d89a",
                "PV64": "NOT_SUPPORTED"
            },
            "ap-southeast-1": {
                "HVM64": "ami-a59b49c6",
                "HVMG2": "ami-0cb5676f",
                "PV64": "ami-df9e4cbc"
            },
            "ap-southeast-2": {
                "HVM64": "ami-dc361ebf",
                "HVMG2": "ami-a71c34c4",
                "PV64": "ami-63351d00"
            },
            "cn-north-1": {
                "HVM64": "ami-8e6aa0e3",
                "HVMG2": "NOT_SUPPORTED",
                "PV64": "ami-77559f1a"
            },
            "eu-central-1": {
                "HVM64": "ami-ea26ce85",
                "HVMG2": "ami-7f04ec10",
                "PV64": "ami-6527cf0a"
            },
            "eu-west-1": {
                "HVM64": "ami-f9dd458a",
                "HVMG2": "ami-b9bd25ca",
                "PV64": "ami-4cdd453f"
            },
            "sa-east-1": {
                "HVM64": "ami-6dd04501",
                "HVMG2": "NOT_SUPPORTED",
                "PV64": "ami-1ad34676"
            },
            "us-east-1": {
                "HVM64": "ami-6869aa05",
                "HVMG2": "ami-2e5e9c43",
                "PV64": "ami-2a69aa47"
            },
            "us-west-1": {
                "HVM64": "ami-31490d51",
                "HVMG2": "ami-fd76329d",
                "PV64": "ami-a2490dc2"
            },
            "us-west-2": {
                "HVM64": "ami-7172b611",
                "HVMG2": "ami-83b770e3",
                "PV64": "ami-7f77b31f"
            }
        },
        "AWSRegionArch2Centos7LinuxAMI": {
            "ap-northeast-1": {
                "HVM64": "ami-571e3c30",
                "HVMG2": "NOT_SUPPORTED",
                "PV64": "NOT_SUPPORTED"
            },
            "ap-northeast-2": {
                "HVM64": "ami-97cb19f9",
                "HVMG2": "NOT_SUPPORTED",
                "PV64": "NOT_SUPPORTED"
            },
            "ap-south-1": {
                "HVM64": "ami-11f0837e",
                "HVMG2": "NOT_SUPPORTED",
                "PV64": "NOT_SUPPORTED"
            },
            "ap-southeast-1": {
                "HVM64": "ami-30318f53",
                "HVMG2": "NOT_SUPPORTED",
                "PV64": "NOT_SUPPORTED"
            },
            "ap-southeast-2": {
                "HVM64": "ami-24959b47",
                "HVMG2": "NOT_SUPPORTED",
                "PV64": "NOT_SUPPORTED"
            },
            "cn-north-1": {
                "HVM64": "NOT_SUPPORTED",
                "HVMG2": "NOT_SUPPORTED",
                "PV64": "NOT_SUPPORTED"
            },
            "eu-central-1": {
                "HVM64": "ami-7cbc6e13",
                "HVMG2": "NOT_SUPPORTED",
                "PV64": "NOT_SUPPORTED"
            },
            "eu-west-1": {
                "HVM64": "ami-0d063c6b",
                "HVMG2": "NOT_SUPPORTED",
                "PV64": "NOT_SUPPORTED"
            },
            "sa-east-1": {
                "HVM64": "ami-864f2dea",
                "HVMG2": "NOT_SUPPORTED",
                "PV64": "NOT_SUPPORTED"
            },
            "us-east-1": {
                "HVM64": "ami-ae7bfdb8",
                "HVMG2": "NOT_SUPPORTED",
                "PV64": "NOT_SUPPORTED"
            },
            "us-west-1": {
                "HVM64": "ami-7c280d1c",
                "HVMG2": "NOT_SUPPORTED",
                "PV64": "NOT_SUPPORTED"
            },
            "us-west-2": {
                "HVM64": "ami-0c2aba6c",
                "HVMG2": "NOT_SUPPORTED",
                "PV64": "NOT_SUPPORTED"
            }
        },
        "Region2ARNPrefix": {
            "ap-northeast-1": {
                "ARNPrefix": "arn:aws:"
            },
            "ap-northeast-2": {
                "ARNPrefix": "arn:aws:"
            },
            "ap-south-1": {
                "ARNPrefix": "arn:aws:"
            },
            "ap-southeast-1": {
                "ARNPrefix": "arn:aws:"
            },
            "ap-southeast-2": {
                "ARNPrefix": "arn:aws:"
            },
            "cn-north-1": {
                "ARNPrefix": "arn:aws-cn:"
            },
            "eu-central-1": {
                "ARNPrefix": "arn:aws:"
            },
            "eu-west-1": {
                "ARNPrefix": "arn:aws:"
            },
            "sa-east-1": {
                "ARNPrefix": "arn:aws:"
            },
            "us-east-1": {
                "ARNPrefix": "arn:aws:"
            },
            "us-west-1": {
                "ARNPrefix": "arn:aws:"
            },
            "us-west-2": {
                "ARNPrefix": "arn:aws:"
            }
        },
        "Region2KeyPair": {
            "ap-northeast-1": {
                "key": "tokyo"
            },
            "ap-northeast-2": {
                "key": "seoul"
            },
            "ap-south-1": {
                "key": "mumbai"
            },
            "ap-southeast-1": {
                "key": "singapore"
            },
            "ap-southeast-2": {
                "key": "sydney"
            },
            "ca-central-1": {
                "key": "central-canada"
            },
            "cn-north-1": {
                "key": "NO ACCESS TO CHINA FOR US USERS"
            },
            "eu-central-1": {
                "key": "frankfurt"
            },
            "eu-west-1": {
                "key": "ireland"
            },
            "eu-west-2": {
                "key": "london"
            },
            "sa-east-1": {
                "key": "sao-paulo"
            },
            "us-east-1": {
                "key": "north-virginia"
            },
            "us-east-2": {
                "key": "ohio"
            },
            "us-west-1": {
                "key": "northern-california"
            },
            "us-west-2": {
                "key": "oregon"
            }
        },
        "Region2Principal": {
            "ap-northeast-1": {
                "EC2Principal": "ec2.amazonaws.com",
                "OpsWorksPrincipal": "opsworks.amazonaws.com"
            },
            "ap-northeast-2": {
                "EC2Principal": "ec2.amazonaws.com",
                "OpsWorksPrincipal": "opsworks.amazonaws.com"
            },
            "ap-south-1": {
                "EC2Principal": "ec2.amazonaws.com",
                "OpsWorksPrincipal": "opsworks.amazonaws.com"
            },
            "ap-southeast-1": {
                "EC2Principal": "ec2.amazonaws.com",
                "OpsWorksPrincipal": "opsworks.amazonaws.com"
            },
            "ap-southeast-2": {
                "EC2Principal": "ec2.amazonaws.com",
                "OpsWorksPrincipal": "opsworks.amazonaws.com"
            },
            "cn-north-1": {
                "EC2Principal": "ec2.amazonaws.com.cn",
                "OpsWorksPrincipal": "opsworks.amazonaws.com.cn"
            },
            "eu-central-1": {
                "EC2Principal": "ec2.amazonaws.com",
                "OpsWorksPrincipal": "opsworks.amazonaws.com"
            },
            "eu-west-1": {
                "EC2Principal": "ec2.amazonaws.com",
                "OpsWorksPrincipal": "opsworks.amazonaws.com"
            },
            "sa-east-1": {
                "EC2Principal": "ec2.amazonaws.com",
                "OpsWorksPrincipal": "opsworks.amazonaws.com"
            },
            "us-east-1": {
                "EC2Principal": "ec2.amazonaws.com",
                "OpsWorksPrincipal": "opsworks.amazonaws.com"
            },
            "us-west-1": {
                "EC2Principal": "ec2.amazonaws.com",
                "OpsWorksPrincipal": "opsworks.amazonaws.com"
            },
            "us-west-2": {
                "EC2Principal": "ec2.amazonaws.com",
                "OpsWorksPrincipal": "opsworks.amazonaws.com"
            }
        }
    },
    "Outputs": {
        "LinuxType": {
            "Description": "The linux type of the EC2 instance.",
            "Value": {
                "Fn::If": [
                    "IsCentos7",
                    "centos_7",
                    "amazon_linux"
                ]
            }
        },
        "LogGroupName": {
            "Description": "LogGroupName (Physical ID)",
            "Value": {
                "Ref": "LogGroupResource"
            }
        },
        "PublicIp": {
            "Description": "Public IP of the newly created EC2 instance",
            "Value": {
                "Fn::GetAtt": [
                    "ChefNodeInstance",
                    "PublicIp"
                ]
            }
        }
    },
    "Parameters": {
        "InstanceProfileName": {
            "AllowedPattern": "^[a-zA-Z0-9]*$",
            "Default": "InstanceProfile",
            "Description": "The instance profile name you would like to give the role associated with this EC2 instance.",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "InstanceType": {
            "AllowedValues": [
                "t1.micro",
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m1.small",
                "m1.medium",
                "m1.large",
                "m1.xlarge",
                "m2.xlarge",
                "m2.2xlarge",
                "m2.4xlarge",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "m4.large",
                "m4.xlarge",
                "m4.2xlarge",
                "m4.4xlarge",
                "m4.10xlarge",
                "c1.medium",
                "c1.xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "c4.large",
                "c4.xlarge",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge",
                "g2.2xlarge",
                "g2.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge",
                "d2.xlarge",
                "d2.2xlarge",
                "d2.4xlarge",
                "d2.8xlarge",
                "hi1.4xlarge",
                "hs1.8xlarge",
                "cr1.8xlarge",
                "cc2.8xlarge",
                "cg1.4xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type.",
            "Default": "t2.micro",
            "Description": "EC2 Instance Size",
            "Type": "String"
        },
        "LinuxType": {
            "AllowedValues": [
                "centos_7",
                "amazon_linux"
            ],
            "ConstraintDescription": "must be either centos_7 or amazon_linux",
            "Default": "centos_7",
            "Description": "Linux Type",
            "Type": "String"
        },
        "LogGroupName": {
            "AllowedPattern": "^[a-zA-Z0-9]*$",
            "Default": "LogGroup",
            "Description": "The log group name you would like to give the role associated with this EC2 instance.",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "LogPolicyName": {
            "AllowedPattern": "^[a-zA-Z0-9]*$",
            "Default": "LogPolicy",
            "Description": "The log policy name you would like to give the role associated with this EC2 instance.",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "LogRetentionDays": {
            "AllowedValues": [
                "1",
                "3",
                "5",
                "7",
                "14",
                "30",
                "60",
                "90",
                "120",
                "150",
                "180",
                "365",
                "400",
                "545",
                "731",
                "1827",
                "3653"
            ],
            "Default": "7",
            "Description": "The number of days you would like to retain the logs associated with this instance in cloudwatch.",
            "Type": "Number"
        },
        "RoleName": {
            "AllowedPattern": "^[a-zA-Z0-9]*$",
            "Default": "InstanceRole",
            "Description": "The name you would like to give the role associated with this EC2 instance.",
            "MaxLength": "15",
            "MinLength": "1",
            "Type": "String"
        },
        "SSHLocation": {
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x.",
            "Default": "0.0.0.0/0",
            "Description": "The IP address range that can be used to SSH to the EC2 instances",
            "MaxLength": "18",
            "MinLength": "9",
            "Type": "String"
        }
    },
    "Resources": {
        "ChefNodeInstance": {
            "Metadata": {
                "AWS::CloudFormation::Authentication": {
                    "S3AccessCreds": {
                        "roleName": {
                            "Ref": "RoleResource"
                        },
                        "type": "S3"
                    }
                },
                "AWS::CloudFormation::Init": {
                    "Configure": {
                        "commands": {
                            "01_test": {
                                "command": "echo \"$CFNTEST\" > Configure.txt",
                                "cwd": "~",
                                "env": {
                                    "CFNTEST": "I come from Configure."
                                }
                            },
                            "02_chef_bootstrap": {
                                "command": "chef-client -j /etc/chef/first-run.json"
                            }
                        }
                    },
                    "Install": {
                        "commands": {
                            "01_test": {
                                "command": "echo \"$CFNTEST\" > Install.txt",
                                "cwd": "~",
                                "env": {
                                    "CFNTEST": "I come from Install."
                                }
                            }
                        },
                        "files": {
                            "/etc/cfn/cfn-hup.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "\n",
                                        [
                                            "[main]",
                                            "stack={{stackid}}",
                                            "region={{region}}",
                                            "interval=1"
                                        ]
                                    ]
                                },
                                "context": {
                                    "region": {
                                        "Ref": "AWS::Region"
                                    },
                                    "stackid": {
                                        "Ref": "AWS::StackId"
                                    }
                                },
                                "group": "root",
                                "mode": "000400",
                                "owner": "root"
                            },
                            "/etc/cfn/hooks.d/cfn-auto-reloader.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "\n",
                                        [
                                            "[cfn-auto-reloader-hook]",
                                            "triggers=post.update",
                                            "path=Resources.{{instance_name}}.Metadata.AWS::CloudFormation::Init",
                                            "action=/opt/aws/bin/cfn-init -v      --stack {{stack_name}}      --resource {{instance_name}}      --configsets {{config_sets}}      --region {{region}} ",
                                            "runas={{run_as}}"
                                        ]
                                    ]
                                },
                                "context": {
                                    "config_sets": "InstallAndRun",
                                    "instance_name": "ChefNodeInstance",
                                    "region": {
                                        "Ref": "AWS::Region"
                                    },
                                    "run_as": "root",
                                    "stack_name": {
                                        "Ref": "AWS::StackName"
                                    }
                                }
                            }
                        },
                        "packages": {
                            "yum": {
                                "docker": [],
                                "stress": []
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "cfn-hup": {
                                    "enabled": "true",
                                    "ensureRunning": "true"
                                },
                                "docker": {
                                    "enabled": "true",
                                    "ensureRunning": "true"
                                }
                            }
                        }
                    },
                    "InstallChef": {
                        "commands": {
                            "01_invoke_omnitruck_install": {
                                "command": "curl -L https://omnitruck.chef.io/install.sh | bash"
                            }
                        },
                        "files": {
                            "/etc/chef/client.rb": {
                                "authentication": "S3AccessCreds",
                                "group": "root",
                                "mode": "000600",
                                "owner": "root",
                                "source": "https://s3-us-west-2.amazonaws.com/jasondebolt-chef/client.rb"
                            },
                            "/etc/chef/first-run.json": {
                                "authentication": "S3AccessCreds",
                                "group": "root",
                                "mode": "000600",
                                "owner": "root",
                                "source": "https://s3-us-west-2.amazonaws.com/jasondebolt-chef/first-run.json"
                            },
                            "/etc/chef/jasondebolt-validator.pem": {
                                "authentication": "S3AccessCreds",
                                "group": "root",
                                "mode": "000600",
                                "owner": "root",
                                "source": "https://s3-us-west-2.amazonaws.com/jasondebolt-chef/jasondebolt-validator.pem"
                            }
                        }
                    },
                    "InstallLogs": {
                        "commands": {
                            "01_create_state_directory": {
                                "command": "mkdir -p /var/awslogs/state"
                            },
                            "02_test": {
                                "command": "echo \"$CFNTEST\" > InstallLogs.txt",
                                "cwd": "~",
                                "env": {
                                    "CFNTEST": "I come from install_logs."
                                }
                            },
                            "03_install_aws_logs_if_centos": {
                                "command": {
                                    "Fn::If": [
                                        "IsCentos7",
                                        {
                                            "Fn::Join": [
                                                "\n",
                                                [
                                                    "curl https://s3.amazonaws.com/aws-cloudwatch/downloads/latest/awslogs-agent-setup.py -O",
                                                    {
                                                        "Fn::Join": [
                                                            "",
                                                            [
                                                                "sudo python ./awslogs-agent-setup.py",
                                                                "   --configfile /etc/awslogs/awslogs",
                                                                ".conf   --non-interactive  --region ",
                                                                {
                                                                    "Ref": "AWS::Region"
                                                                }
                                                            ]
                                                        ]
                                                    }
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "",
                                                [
                                                    "echo \"not installing awslogs from ",
                                                    "from source\""
                                                ]
                                            ]
                                        }
                                    ]
                                }
                            }
                        },
                        "files": {
                            "/etc/awslogs/awscli.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "\n",
                                        [
                                            "[plugins]",
                                            "cwlogs = cwlogs",
                                            "[default]",
                                            "region = {{region}}"
                                        ]
                                    ]
                                },
                                "context": {
                                    "region": {
                                        "Ref": "AWS::Region"
                                    }
                                },
                                "group": "root",
                                "mode": "000444",
                                "owner": "root"
                            },
                            "/etc/awslogs/awslogs.conf": {
                                "content": {
                                    "Fn::Join": [
                                        "\n",
                                        [
                                            "[general]",
                                            "state_file= /var/awslogs/state/agent-state",
                                            "",
                                            "[/var/log/cloud-init.log]",
                                            "file = /var/log/cloud-init.log",
                                            "log_group_name = {{log_group_name}}",
                                            "log_stream_name = {instance_id}/cloud-init.log",
                                            "datetime_format = {{datetime_format}}",
                                            "",
                                            "[/var/log/cloud-init-output.log]",
                                            "file = /var/log/cloud-init-output.log",
                                            "log_group_name = {{log_group_name}}",
                                            "log_stream_name = {instance_id}/cloud-init-output.log",
                                            "datetime_format = {{datetime_format}}",
                                            "",
                                            "[/var/log/cfn-init.log]",
                                            "file = /var/log/cfn-init.log",
                                            "log_group_name = {{log_group_name}}",
                                            "log_stream_name = {instance_id}/cfn-init.log",
                                            "datetime_format = {{datetime_format}}",
                                            "",
                                            "[/var/log/cfn-hup.log]",
                                            "file = /var/log/cfn-hup.log",
                                            "log_group_name = {{log_group_name}}",
                                            "log_stream_name = {instance_id}/cfn-hup.log",
                                            "datetime_format = {{datetime_format}}",
                                            "",
                                            "[/var/log/cfn-wire.log]",
                                            "file = /var/log/cfn-wire.log",
                                            "log_group_name = {{log_group_name}}",
                                            "log_stream_name = {instance_id}/cfn-wire.log",
                                            "datetime_format = {{datetime_format}}",
                                            "",
                                            "[/var/log/httpd]",
                                            "file = /var/log/httpd/*",
                                            "log_group_name = {{log_group_name}}",
                                            "log_stream_name = {instance_id}/httpd",
                                            "datetime_format = {{datetime_format}}"
                                        ]
                                    ]
                                },
                                "context": {
                                    "datetime_format": "%d/%b/%Y:%H:%M:%S",
                                    "log_group_name": {
                                        "Ref": "LogGroupResource"
                                    }
                                }
                            }
                        },
                        "services": {
                            "sysvinit": {
                                "awslogs": {
                                    "enabled": "true",
                                    "ensureRunning": "true",
                                    "files": [
                                        "/etc/awslogs/awslogs.conf"
                                    ]
                                }
                            }
                        }
                    },
                    "configSets": {
                        "InstallAndRun": [
                            "Install",
                            "InstallLogs",
                            "InstallChef",
                            "Configure"
                        ]
                    }
                }
            },
            "Properties": {
                "IamInstanceProfile": {
                    "Ref": "InstanceProfileResource"
                },
                "ImageId": {
                    "Fn::If": [
                        "IsCentos7",
                        {
                            "Fn::FindInMap": [
                                "AWSRegionArch2Centos7LinuxAMI",
                                {
                                    "Ref": "AWS::Region"
                                },
                                {
                                    "Fn::FindInMap": [
                                        "AWSInstanceType2Arch",
                                        {
                                            "Ref": "InstanceType"
                                        },
                                        "Arch"
                                    ]
                                }
                            ]
                        },
                        {
                            "Fn::FindInMap": [
                                "AWSRegionArch2AmazonLinuxAMI",
                                {
                                    "Ref": "AWS::Region"
                                },
                                {
                                    "Fn::FindInMap": [
                                        "AWSInstanceType2Arch",
                                        {
                                            "Ref": "InstanceType"
                                        },
                                        "Arch"
                                    ]
                                }
                            ]
                        }
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Fn::FindInMap": [
                        "Region2KeyPair",
                        {
                            "Ref": "AWS::Region"
                        },
                        "key"
                    ]
                },
                "SecurityGroups": [
                    {
                        "Ref": "SecurityGroup"
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "env",
                        "Value": "ops"
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                {
                                    "Fn::If": [
                                        "IsCentos7",
                                        {
                                            "Fn::Join": [
                                                "\n",
                                                [
                                                    "#!/bin/bash ",
                                                    "sudo yum update -y ",
                                                    "sudo yum install -y vim ",
                                                    "sudo yum install -y epel-release ",
                                                    "sudo yum install -y awscli ",
                                                    "# Install CFN-BootStrap ",
                                                    "/usr/bin/easy_install --script-dir /opt/aws/bin https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz ",
                                                    "cp -v /usr/lib/python2*/site-packages/aws_cfn_bootstrap*/init/redhat/cfn-hup /etc/init.d ",
                                                    "chmod +x /etc/init.d/cfn-hup "
                                                ]
                                            ]
                                        },
                                        {
                                            "Fn::Join": [
                                                "\n",
                                                [
                                                    "#!/bin/bash -xe ",
                                                    "yum update -y ",
                                                    "# Update CFN-BootStrap ",
                                                    "yum update -y aws-cfn-bootstrap",
                                                    "sudo yum install -y awslogs "
                                                ]
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "Fn::Join": [
                                        "",
                                        [
                                            "# Install the files and packages from the metadata\n/opt/aws/bin/cfn-init -v ",
                                            "         --stack ",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "         --resource ",
                                            "ChefNodeInstance",
                                            "         --configsets InstallAndRun",
                                            "         --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "         --role ",
                                            {
                                                "Ref": "RoleResource"
                                            },
                                            "\n",
                                            "# Signal the status from cfn-init\n",
                                            "/opt/aws/bin/cfn-signal -e $?          --stack ",
                                            {
                                                "Ref": "AWS::StackName"
                                            },
                                            "         --resource ",
                                            "ChefNodeInstance",
                                            "         --region ",
                                            {
                                                "Ref": "AWS::Region"
                                            },
                                            "         --role ",
                                            {
                                                "Ref": "RoleResource"
                                            },
                                            "\n"
                                        ]
                                    ]
                                }
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
        },
        "DefaultPolicyResource": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "cloudformation:*"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                "*"
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": "DefaultPolicyName",
                "Roles": [
                    {
                        "Ref": "RoleResource"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "InstanceProfileResource": {
            "Properties": {
                "Path": "/",
                "Roles": [
                    {
                        "Ref": "RoleResource"
                    }
                ]
            },
            "Type": "AWS::IAM::InstanceProfile"
        },
        "LogGroupResource": {
            "DeletionPolicy": "Delete",
            "Properties": {
                "RetentionInDays": {
                    "Ref": "LogRetentionDays"
                }
            },
            "Type": "AWS::Logs::LogGroup"
        },
        "LogPolicyResource": {
            "Properties": {
                "PolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents",
                                "logs:DescribeLogStreams"
                            ],
                            "Effect": "Allow",
                            "Resource": [
                                "*"
                            ]
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "PolicyName": {
                    "Ref": "LogPolicyName"
                },
                "Roles": [
                    {
                        "Ref": "RoleResource"
                    }
                ]
            },
            "Type": "AWS::IAM::Policy"
        },
        "RoleResource": {
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Action": [
                                "sts:AssumeRole"
                            ],
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "ec2.amazonaws.com",
                                    "opsworks.amazonaws.com"
                                ]
                            }
                        }
                    ],
                    "Version": "2012-10-17"
                },
                "ManagedPolicyArns": [
                    "arn:aws:iam::aws:policy/AmazonS3FullAccess"
                ],
                "Path": "/"
            },
            "Type": "AWS::IAM::Role"
        },
        "SecurityGroup": {
            "Properties": {
                "GroupDescription": "Allows SSH access from anywhere",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "SSHLocation"
                        },
                        "FromPort": 22,
                        "IpProtocol": "tcp",
                        "ToPort": 22
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 80,
                        "IpProtocol": "tcp",
                        "ToPort": 80
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": 8080,
                        "IpProtocol": "tcp",
                        "ToPort": 8080
                    }
                ],
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "ChefNodeInstanceSecurityGroup"
                    }
                ]
            },
            "Type": "AWS::EC2::SecurityGroup"
        }
    }
}
